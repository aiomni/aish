name: Build and Release

on:
  push:
    branches:
      - dev

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      with:
          fetch-depth: 0

    - name: Setup Golang with cache
      uses: magnetikonline/action-golang-cache@v4
      with:
        go-version-file: go.mod

    - name: Install semver-tool
      run: |
        wget https://github.com/fsaintjacques/semver-tool/archive/3.3.0.tar.gz
        tar xf 3.3.0.tar.gz
        cd semver-tool-3.3.0
        make install

    - name: Get the last prerelease version
      id: latest_release
      uses: actions/github-script@v6
      with:
        github-token: ${{ secrets.OMNI_RELEASE_TOKEN }}
        script: |
          const { data } = await github.rest.repos.getLatestRelease({ owner: context.repo.owner, repo: context.repo.repo });
          console.log(data.tag_name);
          return data.tag_name;

    - name: Add pre-release tag to the version
      id: version
      run: echo ::set-output name=version::$(semver bump prerel alpha.. ${{ steps.latest_release.outputs.result }})

    - name: Build
      run: |
        GOOS=linux GOARCH=amd64 go build -ldflags "-X 'cmd.version=v${{steps.version.outputs.version}}'" -o aish-linux main.go 
        GOOS=darwin GOARCH=amd64 go build -ldflags "-X 'cmd.version=v${{steps.version.outputs.version}}'" -o aish-darwin-amd64 main.go 
        GOOS=darwin GOARCH=arm64 go build -ldflags "-X 'cmd.version=v${{steps.version.outputs.version}}'" -o aish-darwin-arm64 main.go  


    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.OMNI_RELEASE_TOKEN }}
      with:
        tag_name: v${{steps.version.outputs.version}}
        release_name: Prerelease v${{steps.version.outputs.version}}
        body: |
          Changes in this release:
          - Added new feature
        draft: false
        prerelease: false


    - name: Upload Release Asset for Linux
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.OMNI_RELEASE_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./aish-linux
        asset_name: aish-linux
        asset_content_type: application/octet-stream

    - name: Upload Release Asset for Mac amd64
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.OMNI_RELEASE_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./aish-darwin-amd64
        asset_name: aish-darwin-amd64
        asset_content_type: application/octet-stream

    - name: Upload Release Asset for Mac arm64
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.OMNI_RELEASE_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./aish-darwin-arm64
        asset_name: aish-darwin-arm64
        asset_content_type: application/octet-stream
